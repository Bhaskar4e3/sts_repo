package com.example.security.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.Customizer;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.core.userdetails.User;
import org.springframework.security.core.userdetails.User.UserBuilder;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.provisioning.InMemoryUserDetailsManager;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class SecurityConfig {
	
   @Bean
	SecurityFilterChain filterChain(HttpSecurity http) throws Exception {
        http.csrf(csrf -> csrf.disable()).
                authorizeHttpRequests((authorize) -> authorize.anyRequest()
                .authenticated()).httpBasic(Customizer.withDefaults());
		
		return http.build();
	}
   UserDetailsService userDetailsService() {
	   UserDetails bhaskar=User.builder().
			   username("bhaskar").
			   password("bhaskar").
			   roles("USER").build();
	   UserDetails user=User.builder()
	                    .username("ADMIN")
	                    .password("ADMIN")
	                    .roles("ADMIN")
	                    .build();
	return new InMemoryUserDetailsManager(bhaskar,user);
	   
   }
    

}
